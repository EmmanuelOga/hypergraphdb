Tuesday, April 3, 2007 6:34 AM

Ok, obshto vzeto tova e podhoda, da. Samite facets bih izkal obache da gi
predstavish chrez novoto API HGRelType/HGRel, za koeto postvah v
hypergraph foruma. Taman shte go izchistia i napravia praktichno s tvoia
pomosht. Ima edin osnoven vapros: tozi class BuiltinDerivedType kak shte
bade implementiran? Toi defakto shte pravi nai-razlichni neshta v
zavisimost ot base type-a. Zatova si mislia che niama da stane edin
monolithic class. Po-skoro, vijdam SimpleTypeConstructor, koito
synthetizira class-ove kogato sazdava konkreten BuiltinDerivedType v
runtime (t.e. v negovia make method, se generate-va byte code za class
implementirasht vsichkite facets i t.n. i vrashta obekt ot tozi class).
Kakvo mislish za tova kato strategia? Naludnichavo li zvuchi? Niama li
nujda ot chak takava mashinacia. Tova e vsashnost i ideiata, koito
razrabotvame s Bizi za persistence na arbitrary swing component (tam,
normalen Java beans persistence ne raboti, zashtoto samite swing
components ne sledvat spec-a doslovno i vseki si ima razni osobenosti,
koito se predstaviat chrez niakvi relationships). Niama razrabotena
praktika za tazi ideia, taka che ne znam dali tova te plashi.

Pri vsichki polojenie, edin mnogo osnoven vapros sedi: za vseki edin ot
tezi builtin types, triabva da reshim oshte sega kakav shte bade Java type
na resultat ot negovia 'make' metod. t.e. kakav shte bade Java runtime
instance na negovite instances. Naprimer za xsd:long, sigurno shte e JAva
long, obache za decimal, shte triabva da e niakav BigFloat. Ili, ne znam,
ako ima niakav integer type v XSD, koito e s unlimited precision, shte
triabva BigInt da se polzva. Za nikoi sigurno shte triabva nov Java class
da se sazdade (ili da se izkopira neshto sashtestvuvashto). Tova moje bi e
sledvashtata zadacha, za da poglednem problema malko "bottom up": list of
vsichki XSD builtins i kakvi shte se tehnite Java instances...