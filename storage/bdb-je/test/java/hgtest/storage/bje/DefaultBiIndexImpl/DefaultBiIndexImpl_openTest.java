package hgtest.storage.bje.DefaultBiIndexImpl;

import com.sleepycat.je.*;
import org.easymock.EasyMock;
import org.hypergraphdb.HGException;
import org.hypergraphdb.storage.ByteArrayConverter;
import org.hypergraphdb.storage.bje.BJEConfig;
import org.hypergraphdb.storage.bje.BJEStorageImplementation;
import org.hypergraphdb.storage.bje.DefaultBiIndexImpl;
import org.hypergraphdb.transaction.HGTransactionManager;
import org.powermock.api.easymock.PowerMock;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.util.Comparator;

import static org.testng.Assert.assertEquals;

/**
 * @author Yuriy Sechko
 */
public class DefaultBiIndexImpl_openTest
{
	private static final String INDEX_NAME = "sample index";
	// storage - used only for getting configuration data
	private final BJEStorageImplementation storage = PowerMock
			.createStrictMock(BJEStorageImplementation.class);
	// transaction manager - used for transactions
	private HGTransactionManager transactionManager = PowerMock
			.createStrictMock(HGTransactionManager.class);
	private ByteArrayConverter<Integer> keyConverter = PowerMock
			.createStrictMock(ByteArrayConverter.class);
	private ByteArrayConverter<String> valueConverter = PowerMock
			.createStrictMock(ByteArrayConverter.class);
	private Comparator<?> comparator = PowerMock
			.createStrictMock(Comparator.class);

	// real instances we need: Database, Environment and implementation of
	// HGTransactionFactory (as anonymous in BJEStorageImplementation)

	@BeforeMethod
	protected void resetMocks()
	{
		PowerMock.resetAll();
	}

	@AfterMethod
	protected void verifyMocks()
	{
		PowerMock.verifyAll();
	}

	@Test
	public void indexNameIsNull() throws Exception
	{
		final Exception expected = new HGException(
				"While attempting to open index ;null': java.lang.NullPointerException");

		EasyMock.expect(storage.getConfiguration()).andReturn(new BJEConfig());
		final Environment fakeEnvironment = PowerMock
				.createStrictMock(Environment.class);
		EasyMock.expect(
				fakeEnvironment.openDatabase(
						(Transaction) EasyMock.anyObject(),
						(String) EasyMock.anyObject(),
						(DatabaseConfig) EasyMock.anyObject())).andReturn(null);
		EasyMock.expect(fakeEnvironment.getConfig()).andReturn(null);
		EasyMock.expect(storage.getBerkleyEnvironment()).andReturn(
				fakeEnvironment);
		EasyMock.expect(storage.getBerkleyEnvironment()).andReturn(
				fakeEnvironment);
		final DefaultBiIndexImpl indexImpl = new DefaultBiIndexImpl(null,
				storage, transactionManager, keyConverter, valueConverter,
				comparator);

		PowerMock.replayAll();
		try
		{
			indexImpl.open();
		}
		catch (Exception occurred)
		{
			assertEquals(occurred.getClass(), expected.getClass());
			assertEquals(occurred.getMessage(), expected.getMessage());
		}
	}
}
