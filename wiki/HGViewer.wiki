#summary Overview, building and installing.

= Introduction =

As its name implies HGViewer is an application that is meant to visually represent parts of a given HyperGraph instance. It can be used as a standalone application or as a embeddable component. HGViewer is based on [http://www.cs.umd.edu/hcil/jazz/index.shtml Piccolo] project, which provides very useful visual features such as: zooming interface, infinite canvas, scene/camera support, etc.       

== Installing from Source Code == 

The HGViewer source code resides in the [http://code.google.com/p/viewer/source/checkout  Subversion repository] and releases are structured following standard Subversion conventions:

  * The main branch containing latest development code can be found under `trunk`.
  * Each release can be found under `tags`.

== Source Code Directory Structure ==

Source code is organized in the following top-level directories:

|| `src/` || The source code. Sub-divided under `java` ||
|| `jars/` || Third-party Java library dependencies for the HGViewer. ||

= Compiling the Source =

HGViewer uses the [http://ant.apache.org ANT build system]. You can compile, build and zip the distribution with the top-level ant script. The only prerequisite is the HyperGraphDB jar which you can take from the HyperGraphDB distribution or build from source. For more information see [http://code.google.com/p/hypergraphdb/wiki/IntroInstall]. Place the hgdbfull.jar in the project's top directory or change the value of hgdb_jar property to point to HyperGraphDB jar.   

The following table describes the three targets used to build HyperGraphDB for deployment:

|| *Target* || *Result* || *Contents* ||
|| `jar` || `hgviewer.jar` || Creates the HGViewer jar. ||
|| `dist-win` || `hgviewer-dist-win.zip` || Creates zipped Windows distribution. ||
|| `dist-lin` || `hgviewer-dist-lin.zip` || Creates zipped Linux distribution. ||

*Tip*: Use the command `ant -p` to list all available targets for a project script.

== Downloading and Installing HGViewer ==

All official release packages are located at the ???[http://code.google.com/p/hypergraphdb/downloads/list Google Code downloads area]. The latest build is linked to at [http://www.kobrix.com/hgdb.jsp HyperGraphDB home page].

HyperGraphDB releases are distributed in compressed archive files  (`.tar.gz` for Unix platforms and `.zip` for Windows). To install a distribution, just unzip the archive into a directory of your own choosing. 

== Distribution Archive Content ==

The unzipped archive contains the following:

|| `readme.html`          || General information about the HGViewer disribution. ||
|| `LicensingInformation` || The HGViewer license conditions. ||
|| `hgviewer.jar`         || The HGViewer jar. ||
|| `run.cmd`         || Start script for Windows distribution only. ||
|| `run.sh`         || Start script for Linux distribution only. ||
|| `hgviewer.jar`         || The HGViewer jar. ||
|| `jars/`                || Third-party Java library dependencies. Note that not all libraries in this directory are needed in every situation. Jar dependencies are described below . ||  
|| `javadoc/` || API documentation in HTML format.||  



= Deploying Applications =

In total, the HyperGraphDB library consists of its own JAR files, Berkeley DB's `db.jar` file, third-party JAR files for peer-to-peer communication, and the Berkeley DB JNI library. The specific JARS required by your application depend on the deployment scenario. The following table shows the possible deployment scenarios and the JARS required for each:

|| *HyperGraphDB Features* || *Files Required* ||
|| Core HyperGraphDB (embedded database only, no networking) || `hypergraphdb.jar` and `jars/db.jar` ||
|| HyperGraphDB with JXTA networking || `hgdbfull.jar`, `jars/db.jar`, and `jars/jxta.jar`^1^ ||
|| HyperGraphDB with Jabber networking || `hgdbfull.jar`, `jars/db.jar`, `jars/smack.jar`, and `jars/smackx.jar` ||

When deploying your application, you must:

  * Include the relevant `.jar` files in the application's CLASSPATH.
  * Tell the Java Virtual Machine where to find the Berkeley DB JNI library.

You tell the Java Virtual Machine where to find native libraries in one of two ways:

  * Specify the location using the `java` command line option `-Djava.library.path`. For example:<br>
{{{
java -Djava.library.path=$HGDB_ROOT/native
}}}
Here, the environment variable `HGDB_ROOT` has previously been set with the root directory of the HyperGraphDB installation.

  * Add the location to the `PATH` environment variable (on Windows) or the `LD_LIBRARY_PATH` environment variable (on Linux/Unix).

= Details =



Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages