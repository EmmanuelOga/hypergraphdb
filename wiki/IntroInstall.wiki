= Installation and Deployment = 

This page describes the installation of HyperGraphDB from an official release package. If you would like to build and install the system directly from source, please refer to the [CompilationAndDeployment Installing from Source] page. Note that every official release comes with source code, so it is always possible to examine the code, experiment, and apply patches if need be.

HyperGraphDB provides an embedded database library that you can use to create and manage databases in your application. With HyperGraphDB, there is no client/server communication layer, however, it is possible to create distributed databases with additional peer-to-peer (P2P) libraries. HyperGraphDB manages databases through its underlying storage mechanism, specifically Oracle's Berkeley DB (standard edition). HyperGraphDB uses Berkeley DB's native C interface instead of the Java edition in order to open the doors for interoperability with other languages. This means that Berkeley DB's native (JNI) library must be included in the system path of your application. 

= Downloading and Installing HyperGraphDB =

All official release packages are located at the [http://code.google.com/p/hypergraphdb/downloads/list Google Code downloads area]. The latest build is linked to at [http://www.kobrix.com/hgdb.jsp HyperGraphDB home page].

HyperGraphDB releases are distributed in compressed archive files  (`.tar.gz` for Unix platforms and `.zip` for Windows). To install a distribution, just unzip the archive into a directory of your own choosing. 

== Distribution Archive Content ==

The unzipped archive contains the following:

|| `readme.html`          || General information about the HyperGraphDB disribution. ||
|| `LicensingInformation` || The HyperGraphDB license conditions. ||
|| `hypergraphdb.jar`     || Core functionality only, with no P2P communication. ||
|| `hgpeer.jar`           || Additional peer-to-peer functionality. ||
|| `hgdbfull.jar`         || Core functionality and P2P functionality (i.e `hypergraphdb.jar` plus `hgpeer.jar`). ||
|| `jars/`                || Third-party Java library dependencies. Note that not all libraries in this directory are needed in every situation. Only the Berkeley DB JAR file `db.jar` is absolutely needed. ||  
|| `native/`              || Native libraries needed to run this version of HyperGraphDB. While most Unix environments already have Berkeley DB installed in a standard location, you are strongly advised to use the version provided in the distribution. ||  
|| `javadoc/` || API documentation in HTML format.||  
|| `src/`     || The source code used to create the release package. ||
|| `ThirdPartyLicensing/` || Licensing information for HyperGraphDB dependencies, notably Oracle's Berkeley DB Standard Edition. ||

= Deploying Applications =

In total, the HyperGraphDB library consists of its own JAR files, Berkeley DB's `db.jar` file, third-party JAR files for peer-to-peer communication, and the Berkeley DB JNI library. The specific JARS required by your application depend on the deployment scenario. The following table shows the possible deployment scenarios and the JARS required for each:

|| *HyperGraphDB Features* || *Files Required* ||
|| Core HyperGraphDB (embedded database only, no networking) || `hypergraphdb.jar` and `jars/db.jar` ||
|| HyperGraphDB with JXTA networking || `hgdbfull.jar`, `jars/db.jar`, and `jars/jxta.jar`^1^ ||
|| HyperGraphDB with Jabber networking || `hgdbfull.jar`, `jars/db.jar`, `jars/smack.jar`, and `jars/smackx.jar` ||

When deploying your application, you must:

  * Include the relevant `.jar` files in the application's CLASSPATH.
  * Tell the Java Virtual Machine where to find the Berkeley DB JNI library.

You tell the Java Virtual Machine where to find native libraries in one of two ways:

  * Specify the location using the `java` command line option `-Djava.library.path`. For example:<br>
{{{
java -Djava.library.path=$HGDB_ROOT/native
}}}
Here, the environment variable `HGDB_ROOT` has previously been set with the root directory of the HyperGraphDB installation.

  * Add the location to the `PATH` environment variable (on Windows) or the `LD_LIBRARY_PATH` environment variable (on Linux/Unix).

*NOTE for Windows users*:<br>
The Windows native libraries may require the installatioin of the Visual C++ runtime libraries. If you get a runtime error pertaining to DLL loading, try installing the MSVC 9 redistribution package from the [http://www.microsoft.com/downloads/details.aspx?familyid=A5C84275-3B97-4AB7-A40D-3802B2AF5FC2&displaylang=en Microsoft download site].

== Configuration == 

As an embedded database, HyperGraphDB does not require any configuration outside of a few parameters that you set at runtime. However, the distributed version must be configured as described in [PeerConfiguration Configuring Peer-to-Peer Communication]. In addition, there is a `main` method in the class, `org.hypergraphdb.peer.StartPeer`  that takes the name of a configuration file as its only argument. See the topic on [DistributedHyperGraph Creating Distributed Databases] for more information.

[IntroDBCreate Next - Creating a Database >>]

----
^1^JXTA networking is not really maintained anymore due to lack of adoption.