#summary Installing HyperGraphDB

Here we describe installation of HyperGraphDB from an official build. If you'd like to build and install the system directly from source, please refer to the [CompilationAndDeployment] page. Note that every official build comes with its source so it is always possible/easy to examine the code, experiment with or apply patches if need be.

HyperGraphDB comes as library that you can directly use in applications. As such, it is an embedded database and you can have several HyperGraphDB databases open at the same time. The underlying storage mechanism is based on Sleepycat's Berkeley DB, standard edition. Note that HyperGraphDB uses the native Berkeley DB instead of the Java edition in order to open the doors for interoperability with other languages. This means that the native library (Windows DLL or `*`nix shared library) will have to be included in the system path of your application. 

= Where do I get it? =

All official builds are located at the [http://code.google.com/p/hypergraphdb/downloads/list Google Code downloads area]. The latest build is linked to at [http://www.kobrix.com/hgdb.jsp HyperGraphDB home page].

Builds comes in the form of compressed archive files. To install a distribution just unzip the build file into a directory of your own choosing. 

= Distribution Archive Content =

The unzipped archive (.tar.gz for Unix platforms and .zip for Windows) contains the following:

|| readme.html || An introductory file describing what's inside the archive ||
|| hypergraphdb.jar || A jar with the core functionality only - the bare minimum needed to run HGDB. ||
|| hgpeer.jar || A jar containing code needed to run HGDB in a P2P (peer-to-peer) deployment. ||
|| hgdbfull.jar || A jar containing both core functionality and P2P related functionality. Essentially, hgdbfull.jar=hypergraphdb.jar+hgpeer.jar ||
|| jars/ || A directory with third-party dependency Java libraries. Note that not all libraries in this directory are needed in every situation. Only the BerkeleyDB jar file *db.jar* is absolutely needed. ||  
|| native/ || Native libraries needed to run HGDB. While most Unix environments already contain a version of BerkeleyDB in some standard location, it is strongly advised to link to the version provided in the distribution. ||  
|| javadoc/ || API documentation in Javadoc format.||  
|| src/ ||  The source code used to create this build. ||
|| !LicensingInformation || Self-explanatory. ||
|| !ThirdPartyLicensing || Directory containing licensing information on HGDB dependencies, such as BerkeleyDB||

= Deployment =

As mentioned above, HyperGraphDB is deployed by linking it as a library to your application. This means:

  # Including the relevant .jar files in your CLASSPATH.
  # Making the relevant native libraries accessible to the JVM.

Which jars to include depends whether you want to use the P2P functionality or not and what kind of communication infrastructure you'd want to deploy:

  * Core HGDB (without networking): include *hypergraphdb.jar* and *jars/db.jar*
  * HGDB + JXTA networking: include *hgdbfull.jar*, *jars/db.jar* and *jars/jxta.jar* (note that the JXTA networking is not really maintained anymore due to lack of adoption and maintenance of JXTA itself)
  * HGDB + Jabber networking: include *hgdbfull.jar*, *jars/db.jar*, *jars/smack.jar* and *jars/smackx.jar*

For more on networking deployment and configuration, see DistributedHyperGraph.

Native libraries are made available to the Java Virtual Machine in one of two ways:

  # The java command line option -Djava.library.path. For example *java -Djava.library.path=$HGDB_ROOT/native*
  # Adding their location to the PATH environment variable (on Windows) or the LD_LIBRARY_PATH environment variable (on Linux/Unix)

*NOTE for Windows users* - the Windows native libraries may require the installatioin of the Visual C++ runtime libraries. If you get a runtime error pertaining to DLL loading, try installing the MSVC 9 redistribution package from http://www.microsoft.com/downloads/details.aspx?familyid=A5C84275-3B97-4AB7-A40D-3802B2AF5FC2&displaylang=en

[IntroDBCreate Next - Creating a Database >>]