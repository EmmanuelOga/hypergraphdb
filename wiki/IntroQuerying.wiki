#summary Querying in HyperGraphDB.

There is no special purpose query language for HyperGraphDB, yet. Therefore, querying for atoms is performed with a special purpose API. Like in many other database systems, the API is based on conditional expressions that you create, submit to the query system and get back a set of atoms as the result. 

== Query API Overview ==

The conditional expressions for querying are build up out of classes in the [http://www.kobrix.com/javadocs/hgcore/org/hypergraphdb/query/package-summary.html org.hypergraphdb.query package]. Some of the conditions apply to atom values (the Java object) while others apply to the graph structure (how atoms are link between each other). You can create a query condition by instantiating those classes. Here is an example:

The condition should be self-explanatory: it asks for atoms of type Book and whose author is George Bush. The [http://www.kobrix.com/javadocs/hgcore/org/hypergraphdb/query/AtomPartCondition.html AtomPartCondition] lets you constrain the value of an atom by one of its object properties.

As you can see, the result is returned in the form of  [http://www.kobrix.com/javadocs/hgcore/org/hypergraphdb/HGSearchResult HGSearchResult] instance. Search results are basically bi-directional iterators (you can go back to a previous item) that you need to close once you are done with them, similarly to a JDBC `ResultSet` object. If a search result is not closed, it will maintain locks on certain parts of the database which in turn is likely to cause a deadlock in your application. 