#summary Idioms for working with queries and results.

= Introduction =

Here are a few idioms and code snippets that show how to do queries with HGDB and how to work with result sets. 

= The Queries API =

There is no query language for HGDB at the time of this writing, though we've outlined some ideas on TowardsHyperGraphQueryLanguage page. Queries are build up as query conditions, classes implementing the `HGQueryCondition` interface, and submitted via a call to `HyperGraph.find`. For example:

{{{
HGQueryCondition cond = new And(new AtomTypeCondition(MyLink.class), new IncidentCondition(atom));
HGSearchResult<HGHandle> rs = graph.find(cond);
while (rs.hasNext()) System.out.println(rs.next());
rs.close();
}}}

A more coding friendly API is provided by the `HGQuery.hg` class which, with Java 5 static imports, can be used like this:

{{{
import org.hypergraphdb.HGQuery.hg;

HGQueryCondition cond = hg.and(hg.type(MyLink.class), hg.incident(atom));
HGSearchResult<HGHandle> rs = graph.find(cond);
// etc...
}}}

*It is very important* that HGSearchResult instances be closed properly and promptly (i.e. as soon as possible). They will generally hold an open cursor on the filesystem and must be closed like any other external resource, be it an open file or a socket connection, or an SQL result set. 